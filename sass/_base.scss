/*
COLORS



Grey light 1: #faf9f9
Grey light 2: #f4f2f2
Grey light 3: #f0eeee
Grey light 4: #ccc

Grey dark 1: #333
Grey dark 2: #777
Grey dark 3: #999

*/

* {
    margin: 0;
    padding: 0;

}



//all elements and all after , before pseudo elements will inherit this property
*,
*::before,
*::after {
    box-sizing: inherit;
}

//this is root psudo class, basically the html tag but with more specificity
//since css variables are cascaded and inherited(only available to element+its children) , we will define our css variables(custom properties --) here so that we can use them throughout the document
:root {

    --color-primary:#eb2f64;
    --color-primary-light:#FF3366;
    --color-primary-dark:#BA265D;

    --color-grey-light-1: #faf9f9;
    --color-grey-light-2: #f4f2f2;
    --color-grey-light-3: #f0eeee;
    --color-grey-light-4: #ccc;

    --color-grey-dark-1: #333;
    --color-grey-dark-2: #777;
    --color-grey-dark-3: #999;

    --shadow-dark: 0 2rem 6rem rgba(0, 0, 0, 0.3);
    --line:1px solid var(--color-grey-light-2);

    --shadow-light: 0 2rem 5rem rgba(0, 0, 0, 0.06);
}

$bp-largest:75em;//1200px
$bp-large: 62.5em; //1000px
$bp-medium: 50em; //800px
$bp-small: 37.5em; //800px
$bp-xsmall: 29.3em; //470px

html{
    box-sizing: border-box;
    font-size:62.5%; // this makes 1 rem = 10px 10(target)/16px(browser default)

    @media only screen and (max-width:$bp-large) {
        font-size:50%;
    }
    @media only screen and (max-width:$bp-small) {
        font-size: 40%;
    }

}

body {
    font-family: 'Open Sans',sans-serif; // if Open Sans failed to load
    font-weight: 400;
    line-height: 1.6;
    background-image: linear-gradient(to right bottom,var(--color-primary-light),var(--color-primary-dark));
    background-size:cover;
    background-repeat: no-repeat;
    color:var(--color-grey-dark-2);
    min-height: 100vh;
}